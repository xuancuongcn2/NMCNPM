[
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "yaml",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "yaml",
        "description": "yaml",
        "detail": "yaml",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "webdriver",
        "importPath": "selenium",
        "description": "selenium",
        "isExtraImport": true,
        "detail": "selenium",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "NoSuchElementException",
        "importPath": "selenium.common.exceptions",
        "description": "selenium.common.exceptions",
        "isExtraImport": true,
        "detail": "selenium.common.exceptions",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "write_yml",
        "kind": 2,
        "importPath": "ccfddl.ccfddl",
        "description": "ccfddl.ccfddl",
        "peekOfCode": "def write_yml(data,filename):\n    with open(filename, 'w') as file:\n        yaml.dump(data, file)\ndef write_json(data, filename):\n    with open(filename, 'w') as file:\n        json.dump(data, file, indent=4)\ndef write_csv(data, filename):\n    with open(filename, \"w\", newline='') as file:\n      writer = csv.writer(file)\n      # Ghi header",
        "detail": "ccfddl.ccfddl",
        "documentation": {}
    },
    {
        "label": "write_json",
        "kind": 2,
        "importPath": "ccfddl.ccfddl",
        "description": "ccfddl.ccfddl",
        "peekOfCode": "def write_json(data, filename):\n    with open(filename, 'w') as file:\n        json.dump(data, file, indent=4)\ndef write_csv(data, filename):\n    with open(filename, \"w\", newline='') as file:\n      writer = csv.writer(file)\n      # Ghi header\n      writer.writerow([\"Title\", \"Description\", \"Sub\", \"Rank\", \"DBLP\", \"Year\", \"ID\", \"Link\", \"Abstract Deadline\", \"Deadline\", \"Timezone\", \"Date\", \"Place\"])\n      # Ghi dữ liệu từ YAML vào CSV\n      for conference in data:",
        "detail": "ccfddl.ccfddl",
        "documentation": {}
    },
    {
        "label": "write_csv",
        "kind": 2,
        "importPath": "ccfddl.ccfddl",
        "description": "ccfddl.ccfddl",
        "peekOfCode": "def write_csv(data, filename):\n    with open(filename, \"w\", newline='') as file:\n      writer = csv.writer(file)\n      # Ghi header\n      writer.writerow([\"Title\", \"Description\", \"Sub\", \"Rank\", \"DBLP\", \"Year\", \"ID\", \"Link\", \"Abstract Deadline\", \"Deadline\", \"Timezone\", \"Date\", \"Place\"])\n      # Ghi dữ liệu từ YAML vào CSV\n      for conference in data:\n          title = conference[\"title\"]\n          description = conference[\"description\"]\n          sub = conference[\"sub\"]",
        "detail": "ccfddl.ccfddl",
        "documentation": {}
    },
    {
        "label": "write_json",
        "kind": 2,
        "importPath": "ieecomputer.iee_computer",
        "description": "ieecomputer.iee_computer",
        "peekOfCode": "def write_json(data, filename):\n    with open(filename, 'w', encoding=\"utf-8\") as file:\n        json.dump(data, file, indent=4)\ndef write_csv(data, filename):\n    with open(filename, 'w', newline='',encoding=\"utf-8\") as csvfile:\n        fieldnames = data[0].keys()\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n        writer.writeheader()\n        writer.writerows(data)\nif __name__ == \"__main__\":",
        "detail": "ieecomputer.iee_computer",
        "documentation": {}
    },
    {
        "label": "write_csv",
        "kind": 2,
        "importPath": "ieecomputer.iee_computer",
        "description": "ieecomputer.iee_computer",
        "peekOfCode": "def write_csv(data, filename):\n    with open(filename, 'w', newline='',encoding=\"utf-8\") as csvfile:\n        fieldnames = data[0].keys()\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n        writer.writeheader()\n        writer.writerows(data)\nif __name__ == \"__main__\":\n  ##Trình duyệt web la Firefox\n  driver = webdriver.Firefox()\n  ##ngày tháng năm bắt đầu lấy các sự kiện ",
        "detail": "ieecomputer.iee_computer",
        "documentation": {}
    },
    {
        "label": "deadline_ahead_list",
        "kind": 2,
        "importPath": "polytechnique.polytechnique",
        "description": "polytechnique.polytechnique",
        "peekOfCode": "def deadline_ahead_list(data):\n    tbody = data.find('tbody')\n    rows = tbody.find_all('tr')\n    conference_array = []\n    if len(rows) == 0:\n        return conference_array\n    for row in rows:\n        cells = row.find_all('td')\n        name = cells[0].find('a').text.strip()\n        conference_link = cells[0].find('a')['href']",
        "detail": "polytechnique.polytechnique",
        "documentation": {}
    },
    {
        "label": "running_list",
        "kind": 2,
        "importPath": "polytechnique.polytechnique",
        "description": "polytechnique.polytechnique",
        "peekOfCode": "def running_list(data):\n    tbody = data.find('tbody')\n    rows = tbody.find_all('tr')\n    conference_array = []\n    if len(rows) == 0:\n        return conference_array\n    for row in rows:\n        cells = row.find_all('td')\n        name = cells[0].find('a').text.strip()\n        conference_link = cells[0].find('a')['href']",
        "detail": "polytechnique.polytechnique",
        "documentation": {}
    },
    {
        "label": "deadline_over_list",
        "kind": 2,
        "importPath": "polytechnique.polytechnique",
        "description": "polytechnique.polytechnique",
        "peekOfCode": "def deadline_over_list(data):\n    tbody = data.find('tbody')\n    rows = tbody.find_all('tr')\n    conference_array = []\n    if len(rows) == 0:\n        return conference_array\n    for row in rows:\n        cells = row.find_all('td')\n        name = cells[0].find('a').text.strip()\n        conference_link = cells[0].find('a')['href']",
        "detail": "polytechnique.polytechnique",
        "documentation": {}
    },
    {
        "label": "planning_conference_list",
        "kind": 2,
        "importPath": "polytechnique.polytechnique",
        "description": "polytechnique.polytechnique",
        "peekOfCode": "def planning_conference_list(data):\n    tbody = data.find('tbody')\n    rows = tbody.find_all('tr')\n    conference_array = []\n    if len(rows) == 0:\n        return conference_array\n    for row in rows:\n        cells = row.find_all('td')\n        name = cells[0].find('a').text.strip()\n        conference_link = cells[0].find('a')['href']",
        "detail": "polytechnique.polytechnique",
        "documentation": {}
    },
    {
        "label": "write_json",
        "kind": 2,
        "importPath": "polytechnique.polytechnique",
        "description": "polytechnique.polytechnique",
        "peekOfCode": "def write_json(data, filename):\n    with open(filename, 'w', encoding=\"utf-8\") as file:\n        json.dump(data, file, indent=4)\ndef write_csv(data, filename):\n    with open(filename, 'w', newline='', encoding=\"utf-8\") as csvfile:\n        fieldnames = data[0].keys()\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n        writer.writeheader()\n        writer.writerows(data)\nif __name__ == \"__main__\":",
        "detail": "polytechnique.polytechnique",
        "documentation": {}
    },
    {
        "label": "write_csv",
        "kind": 2,
        "importPath": "polytechnique.polytechnique",
        "description": "polytechnique.polytechnique",
        "peekOfCode": "def write_csv(data, filename):\n    with open(filename, 'w', newline='', encoding=\"utf-8\") as csvfile:\n        fieldnames = data[0].keys()\n        writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n        writer.writeheader()\n        writer.writerows(data)\nif __name__ == \"__main__\":\n    url = \"https://www.lix.polytechnique.fr/~hermann/conf.php\"\n    response = requests.get(url)\n    deadline_ahead_conference_arr = []",
        "detail": "polytechnique.polytechnique",
        "documentation": {}
    }
]